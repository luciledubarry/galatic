---
title: "Lucile_DUBARRY"
author: Lucile DUBARRY
format: html
editor: visual
---

```{r configuration}
#| message: false
library(dplyr)
library(tidyr)
library(here)
library(vroom)
here::i_am("galatic.Rproj")
```

## Main data set import

### Question 1

I have created a data folder with the data sets, but I am sorry I have committed all the 4 data sets together. 

### Question 2 - Link to Github

We work on the Github project, available [here](https://github.com/luciledubarry/galatic.git).

### Question 3

```{r}
#| message: false
planet <- vroom(here("data-sets/planet%data.csv"), 
            locale = locale(decimal_mark = "."), 
            na = "unknown")
```

```{r}
col <- planet |> ncol()
row <- planet |> nrow()
```
```{r}
col == 8
row == 1003
```
This command displays TRUE if the dimensions of the planet data set matches the dimensions of the initial data (which are 1003 rows and 8 columns). 

The data set contains `r nrow(planet)` planets and `r ncol(planet)` variables, which matches with the initial data set. 

```{r}
planet |> select(where(is.numeric))
```

The command above displays the numerical variables of the data set. The variables Planet_number, Star_key and density(earth) are recognized as numeric. 

However, the variables MASS and relative radius are not recognized as numeric because of the unknown value (which indicates if the value is missing). We must change the unknown value into NA during the data loading. 
I also change the decimal mark from a comma to a dot. 

### Question 4
```{r}
missing_values <- rowSums(is.na(planet))
var_missing_value <- sum(missing_values > 0)
```

```{r}
missing_var <- colSums(is.na(planet))
names(planet)[missing_var > 0]
```

```{r}
table_planet <- planet |>
  summarise(row, col, var_missing_value, missing_var[4], missing_var[6])
knitr::kable(table_planet, col.names = c("Number of observations","Number of variables", "Number of observations with at least one missing value", "First variable with a missing value", "Second variable with missing value"))
```

### Question 5

```{r}
#| message: false
library(ggplot2)
```

```{r}
planet |> filter(!is.na(`relative radius`)) |>
  ggplot(aes(x = `relative radius`, y = `density (earth)`))  +
  geom_jitter()
```

### Question 6

```{r}
extreme_planet <- planet |>
  summarise(min_density = min(`density (earth)`, na.rm=TRUE), 
            max_density = max(`density (earth)`, na.rm=TRUE),
            min_mass = min(MASS, na.rm=TRUE),
            max_mass = max(MASS, na.rm=TRUE),
            smallest_radius = min(`relative radius`, na.rm=TRUE),
            biggest_radius = max(`relative radius`, na.rm=TRUE))
knitr::kable(extreme_planet, caption = "Planets with extreme climate")
```

## Improved data representation

### Question 7

```{r}
library(stringr)
```

```{r}
terrain_data <- planet |> 
  reframe(terrain=str_split(`Terrain Type`, ","), .by=PLANET_NUMBER) |>
  unnest(terrain)
```

The terrain_data data set contains the variable PLANET_NUMBER to identify the planet and another variable with the different terrain type associated with the planet. 

```{r}
climate_data <- planet |> 
  reframe(climate=str_split(`Type_climate`, ","), .by=PLANET_NUMBER) |>
  unnest(climate)
```













